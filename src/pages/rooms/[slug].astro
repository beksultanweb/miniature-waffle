---
import fetchApi from '../../api/strapi';
import MainSlider from '../../components/MainSlider';
import MediaContainer from '../../components/MediaContainer.astro';
import Paragraph from '../../components/blocks/Paragraph.astro';
import List from '../../components/blocks/List.astro';
import type Room from '../../interfaces/room';
import Layout from '../../layouts/Layout.astro';
import Heading from '../../components/blocks/Heading.astro';
import ServiceCard from '../../components/ServiceCard.astro';
import type { DescriptionBlocks } from '../../interfaces/descriptionBlocks';

const media = { 
  url: '/uploads/pexels_photo_6831129_f338937b17.jpeg',
  mime: 'image/jpeg'
};

export async function getStaticPaths() {
  const rooms = await fetchApi<Room[]>({
    endpoint: 'rooms?populate=*',
    wrappedByKey: 'data',
  });

  return rooms.map((room) => ({
    params: { slug: room.attributes.slug },
    props: room,
  }));
}
type Props = Room;

const room = Astro.props;
---

<Layout title={room.attributes.title}>
  <MainSlider slides={room.attributes.media.data} client:load />
  <h1 class="text-center text-32 sm:text-64 pt-50 sm:pt-100 uppercase font-medium">{room.attributes.title}</h1>
  {room.attributes.main_description.map((block: DescriptionBlocks) => {
    switch(block.type) {
      case 'heading':
          return <Heading children={block.children} level={block.level} />
      case 'paragraph':
        return <Paragraph children={block.children} />
      case 'list':
        return <List children={block.children} />
    }
  })}
  <div class="container mx-auto py-50 sm:py-100 px-5 grid sm:grid-cols-2 gap-x-8 gap-y-6">
    {room.attributes.advantages.data.map(adv => {
      return (
        <div class="flex gap-5 items-center">
          <img src="/advantage.svg" alt="advantage">
          <div>
            <p class="text-xl lg:text-28 leading-130% font-normal">{adv.attributes.title}</p>
            <p class="text-lg font-normal">{adv.attributes.number}</p>
          </div>
        </div>
      )
    })}
  </div>
  <MediaContainer media={room.attributes.slot_b.data.attributes} />
  <div class="py-50 sm:py-100">
    {room.attributes.description_2.map((block: DescriptionBlocks) => {
      switch(block.type) {
        case 'heading':
          return <Heading children={block.children} level={block.level} />
        case 'paragraph':
          return <Paragraph children={block.children} />
        case 'list':
          return <List children={block.children} />
      }
    })}
  </div>
  <div class="container mx-auto px-5 grid sm:grid-cols-2 xl:grid-cols-3 gap-4">
    {room.attributes.slot_c.data.map(img => 
      <ServiceCard img={img.attributes.url} />
    )}
  </div>
  <div class="py-50 sm:py-100">
    {room.attributes.description_3.map((block: DescriptionBlocks) => {
      switch(block.type) {
        case 'heading':
          return <Heading children={block.children} level={block.level} />
        case 'paragraph':
          return <Paragraph children={block.children} />
        case 'list':
          return <List children={block.children} />
      }
    })}
  </div>
  <MediaContainer media={media} title='доступ к берегу' />
</Layout>